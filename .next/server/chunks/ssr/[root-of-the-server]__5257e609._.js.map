{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/UI/TailSelect.tsx"],"sourcesContent":["import { RefObject, ChangeEvent } from \"react\";\r\n\r\ninterface TailSelectProps {\r\n  id:string;\r\n  refSel: RefObject<HTMLSelectElement | null>;\r\n  items:string[] ;\r\n  handleChange?:(e:ChangeEvent<HTMLSelectElement>)=>void;\r\n}\r\n\r\nexport default function TailSelect({id, refSel, items, handleChange}:TailSelectProps) {\r\n\r\n  return (\r\n      <select id={id} ref={refSel} onChange={handleChange}\r\n                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 \r\n                focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\r\n                dark:focus:ring-blue-500 dark:focus:border-blue-500\r\n                my-5\">\r\n        {items.map((item:string) => <option key={item} value={item}>{item}</option>)}\r\n      </select>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AASe,SAAS,WAAW,EAAC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAiB;IAElF,qBACI,8OAAC;QAAO,IAAI;QAAI,KAAK;QAAQ,UAAU;QAC7B,WAAU;kBAIjB,MAAM,GAAG,CAAC,CAAC,qBAAgB,8OAAC;gBAAkB,OAAO;0BAAO;eAApB;;;;;;;;;;AAGjD","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/UI/TailButton.tsx"],"sourcesContent":["interface TailButtonProps {\r\n  caption:string;\r\n  color:\"blue\" | \"red\" | \"emerald\" | \"orange\" | \"lorange\" | \"lblue\" | \"gray\" | \"white\" | \"yellow\";\r\n  onClick?:(e:MouseEvent<HTMLButtonElement>)=>void; // \"?\" 붙이면 onClick 반드시 안 써도 됨\r\n}\r\n\r\nimport { MouseEvent } from \"react\"; // e.preventDefault 안 해도 됨\r\n\r\ntype BgT = {\r\n  \"blue\":string;\r\n  \"red\":string;\r\n  \"emerald\":string;\r\n  \"orange\" :string;\r\n  \"lorange\":string;\r\n  \"lblue\":string;\r\n  \"gray\":string;\r\n  \"white\":string;\r\n  \"yellow\":string;\r\n}\r\n\r\n\r\nexport default function TailButton({caption, color, onClick}:TailButtonProps) {\r\n    const bg:BgT = {\r\n        \"blue\" : \"bg-blue-700 text-white\",\r\n        \"red\" : \"bg-red-700 text-white\",\r\n        \"emerald\" : \"bg-emerald-800 text-white\",\r\n        \"orange\" : \"bg-orange-600 text-white\",\r\n        \"lorange\" : \"bg-orange-300 text-white\",\r\n        \"lblue\" : \"bg-blue-400 text-white\",\r\n        \"gray\" : \"bg-gray-100 text-white\",\r\n        \"white\" : \"bg-white text-gray-600 font-bold\",\r\n        \"yellow\" : \"bg-yellow-200 text-white\",\r\n    }\r\n    const bgHover:BgT = {\r\n        \"blue\" : \"hover:bg-blue-500 text-white\",\r\n        \"red\" : \"hover:bg-red-500 text-white\",\r\n        \"emerald\" : \"hover:bg-emerald-600 text-white\",\r\n        \"orange\" : \"hover:bg-orange-500 text-white\",\r\n        \"lorange\" : \"hover:bg-orange-200 text-white\",\r\n        \"lblue\" : \"hover:bg-blue-700 text-white\",\r\n        \"yellow\" : \"hover:bg-yellow-400 text-white\",\r\n        \"white\" : \"hover:bg-white text-gray-600 font-bold\",\r\n        \"gray\" : \"hover:bg-gray-100 text-white\",\r\n    }\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={`w-full py-2 px-4 text-base\r\n                    flex justify-center items-center\r\n                    ${bgHover[color]} hover:font-bold\r\n                    ${bg[color]} rounded-lg \r\n                    `}>\r\n      {caption}\r\n    </button>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAqBe,SAAS,WAAW,EAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAiB;IACxE,MAAM,KAAS;QACX,QAAS;QACT,OAAQ;QACR,WAAY;QACZ,UAAW;QACX,WAAY;QACZ,SAAU;QACV,QAAS;QACT,SAAU;QACV,UAAW;IACf;IACA,MAAM,UAAc;QAChB,QAAS;QACT,OAAQ;QACR,WAAY;QACZ,UAAW;QACX,WAAY;QACZ,SAAU;QACV,UAAW;QACX,SAAU;QACV,QAAS;IACb;IACF,qBACE,8OAAC;QAAO,MAAK;QAAS,SAAS;QAAS,WAAW,CAAC;;oBAEpC,EAAE,OAAO,CAAC,MAAM,CAAC;oBACjB,EAAE,EAAE,CAAC,MAAM,CAAC;oBACZ,CAAC;kBACd;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/app/todolist/TodoForm.tsx"],"sourcesContent":["import TailSelect from \"../../UI/TailSelect\";\r\nimport TailButton from \"../../UI/TailButton\";\r\nimport { useRef, useEffect } from \"react\";\r\nimport { MouseEvent } from \"react\";\r\n\r\ninterface TodoFormProps {\r\n  addTodo:(content:string, sel:string)=>void;\r\n}\r\n\r\nexport default function TodoForm({addTodo}:TodoFormProps) {\r\n  //ref를 사용하여 입력된 완료 여부와 내용을 가져옴\r\n  const refsel = useRef<HTMLSelectElement>(null); // 생성 후 읽게 되어있어서 처음에 null이 될 수 있으니 초기값은 null\r\n  const contentref = useRef<HTMLInputElement>(null);\r\n\r\n  //완료 여부를 나타내는 X, O를 배열로 선언\r\n  const sel = [\"X\", \"O\"];\r\n\r\n  //\"확인\" 버튼 클릭 시 완료 여부와 내용을 가져와서 addTodo 함수에 전달함\r\n  const handleClick = (e:MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    //내용이 비었을 경우 처리\r\n    if(contentref.current?.value == \"\"){\r\n        alert(\"내용을 입력해주세요.\");\r\n        contentref.current.focus();\r\n        return;\r\n    }\r\n    //완료 여부와 내용을 변수에 저장\r\n    const content = contentref.current?.value;\r\n    const sel = refsel.current?.value;\r\n    //내용을 비워줌\r\n    if(contentref.current)\r\n    contentref.current.value = \"\";\r\n    //함수 호출\r\n    if(content&&sel)\r\n      addTodo(content, sel);\r\n  }\r\n\r\n  //\"취소\" 버튼 클릭 시 완료 여부를 X로 바꾸고 내용을 비워줌\r\n  const handleRemove = (e:MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if(refsel.current)\r\n      refsel.current.value = \"X\";\r\n    if(contentref.current)\r\n      contentref.current.value = \"\";\r\n  }\r\n\r\n  //랜더링 시 완료 여부를 X로 초기화\r\n  useEffect(()=>{\r\n    if(refsel.current)\r\n      refsel.current.value = sel[0];\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"w-11/12 flex flex-col justify-center items-center py-5 \">\r\n      <h2 className=\"text-2xl text-gray-700 text-center mb-10 font-bold\">TODO LIST</h2>\r\n      <div className=\"w-1/2 flex justify-center items-center\">\r\n        <div id=\"kakaoNomal\" className=\"w-1/5 mr-10\">\r\n        {/* 완료 여부 선택 */}\r\n        <TailSelect\r\n        id = \"todoSelect\"\r\n        refSel = {refsel}\r\n        items = {sel}\r\n        handleChange = {() => {}}\r\n        />\r\n        </div>\r\n\r\n        {/* 내용 입력 */}\r\n        <input\r\n            ref={contentref}\r\n            id=\"content\"\r\n            name=\"content\"\r\n            type=\"text\"\r\n            required\r\n            className=\"block w-2/5 rounded-md bg-white px-3 py-1.5 text-base text-gray-900 \r\n            outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 \r\n            focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6 focus:bg-white mr-10\"/>\r\n\r\n        {/* 확인 버튼 클릭 시 완료 여부와 내용을 가져가서 addTodo 함수에 전달 */}\r\n        <div id=\"kakaoNomal\" className=\"mr-10 w-1/5\">    \r\n        <TailButton \r\n        caption=\"확인\"\r\n        color=\"lblue\"\r\n        onClick={handleClick}\r\n        />\r\n        </div>\r\n\r\n        {/* 취소 버튼 클릭 시 완료 여부를 X로 바꾸고 내용을 비워줌 */}\r\n        <div id=\"kakaoNomal\" className=\"w-1/5\">\r\n        <TailButton \r\n        caption=\"취소\"\r\n        color=\"lblue\"\r\n        onClick={handleRemove}\r\n        />\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAOe,SAAS,SAAS,EAAC,OAAO,EAAe;IACtD,8BAA8B;IAC9B,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAqB,OAAO,4CAA4C;IAC5F,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAE5C,0BAA0B;IAC1B,MAAM,MAAM;QAAC;QAAK;KAAI;IAEtB,8CAA8C;IAC9C,MAAM,cAAc,CAAC;QACnB,EAAE,cAAc;QAChB,eAAe;QACf,IAAG,WAAW,OAAO,EAAE,SAAS,IAAG;YAC/B,MAAM;YACN,WAAW,OAAO,CAAC,KAAK;YACxB;QACJ;QACA,mBAAmB;QACnB,MAAM,UAAU,WAAW,OAAO,EAAE;QACpC,MAAM,MAAM,OAAO,OAAO,EAAE;QAC5B,SAAS;QACT,IAAG,WAAW,OAAO,EACrB,WAAW,OAAO,CAAC,KAAK,GAAG;QAC3B,OAAO;QACP,IAAG,WAAS,KACV,QAAQ,SAAS;IACrB;IAEA,oCAAoC;IACpC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAG,OAAO,OAAO,EACf,OAAO,OAAO,CAAC,KAAK,GAAG;QACzB,IAAG,WAAW,OAAO,EACnB,WAAW,OAAO,CAAC,KAAK,GAAG;IAC/B;IAEA,qBAAqB;IACrB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAG,OAAO,OAAO,EACf,OAAO,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE;IACjC,GAAE,EAAE;IAEJ,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqD;;;;;;0BACnE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,IAAG;wBAAa,WAAU;kCAE/B,cAAA,8OAAC,wHAAA,CAAA,UAAU;4BACX,IAAK;4BACL,QAAU;4BACV,OAAS;4BACT,cAAgB,KAAO;;;;;;;;;;;kCAKvB,8OAAC;wBACG,KAAK;wBACL,IAAG;wBACH,MAAK;wBACL,MAAK;wBACL,QAAQ;wBACR,WAAU;;;;;;kCAKd,8OAAC;wBAAI,IAAG;wBAAa,WAAU;kCAC/B,cAAA,8OAAC,wHAAA,CAAA,UAAU;4BACX,SAAQ;4BACR,OAAM;4BACN,SAAS;;;;;;;;;;;kCAKT,8OAAC;wBAAI,IAAG;wBAAa,WAAU;kCAC/B,cAAA,8OAAC,wHAAA,CAAA,UAAU;4BACX,SAAQ;4BACR,OAAM;4BACN,SAAS;;;;;;;;;;;;;;;;;;;;;;;AAMjB","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/app/todolist/TodoItem.tsx"],"sourcesContent":["import TailButton from \"../../UI/TailButton\";\r\n\r\ninterface TodoItemProps {\r\n    id:string;\r\n    text:string;\r\n    completed:string;\r\n    handleDelete:(id:string)=>void;\r\n    handleToggle:(id:string)=>void;\r\n}\r\n\r\nexport default function TodoItem({id, text, completed, handleDelete, handleToggle}:TodoItemProps) {\r\n\r\n    return (\r\n    <div className=\"w-full flex items-center justify-between ps-4 border border-gray-200 rounded-2xl bg-white hover:bg-gray-50 mb-3\">\r\n        <div className=\"w-4/5 flex justify-start items-center\">\r\n            <div onClick={()=> handleToggle(id)} className=\"hover:cursor-pointer\">\r\n                {completed == \"O\" ? \"✅\" : \"⬜\" } {text}</div>\r\n            </div>\r\n        <div className=\"w-1/5 p-3 inline-flex justify-end items-center\">\r\n            <p className=\"w-1/3\">\r\n                <TailButton\r\n                caption=\"삭제\"\r\n                color=\"lblue\"\r\n                onClick={()=>handleDelete(id)}\r\n                />\r\n            </p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAUe,SAAS,SAAS,EAAC,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAe;IAE5F,qBACA,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,SAAS,IAAK,aAAa;oBAAK,WAAU;;wBAC1C,aAAa,MAAM,MAAM;wBAAK;wBAAE;;;;;;;;;;;;0BAEzC,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAE,WAAU;8BACT,cAAA,8OAAC,wHAAA,CAAA,UAAU;wBACX,SAAQ;wBACR,OAAM;wBACN,SAAS,IAAI,aAAa;;;;;;;;;;;;;;;;;;;;;;AAM1C","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/app/todolist/page.tsx"],"sourcesContent":["'use client'\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport TodoForm from \"./TodoForm\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\ninterface Tdata {\r\n    \"id\": string;\r\n    \"text\": string;\r\n    \"completed\": string;\r\n}\r\n\r\n// 기본 URL 설정\r\nconst baseurl:string = \"http://localhost:3005/todos\"\r\n\r\nexport default function TodoList() {\r\n    const [tdata, setTdata] = useState<Tdata[]>([]);\r\n\r\n    // Todoitem들을 가져오는 함수\r\n    const getData = async () => {\r\n        const data = await axios.get(baseurl);\r\n        setTdata(data.data);\r\n    }\r\n\r\n    // DB에 Todoitem의 내용과 완료 여부를 추가하는 함수\r\n    const addTodo = async (text:string, completed:string) => {\r\n        const resp = await axios.post(baseurl, {\r\n            text: text,\r\n            completed: completed\r\n        })\r\n        console.log(\"addTodo\", resp.data)\r\n        getData();\r\n    }\r\n\r\n    // DB에 Todoitem의 내용을 삭제하는 함수\r\n    const handleDelete = async (id:string) => {\r\n        await axios.delete(baseurl + `/${id}`);\r\n        \r\n        getData();\r\n    }\r\n\r\n    // DB에 Todoitem의 완료 여부를 수정하는 함수\r\n    const handleToggle = async (id:string) => {\r\n        const resp = await axios.get(baseurl + `/${id}`);\r\n        const todo = resp.data;\r\n\r\n        const done = todo.completed == \"O\" ? \"X\" : \"O\";\r\n        await axios.patch(baseurl + `/${id}`, {\r\n            completed : done\r\n        });\r\n        getData();\r\n    }\r\n\r\n    // 화면 랜더링 시 DB에서 Todoitem들을 가져옴\r\n    useEffect(()=>{\r\n        getData();\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!tdata) return;\r\n\r\n    }, [tdata]);\r\n\r\n    return (\r\n    <div className=\"w-full flex flex-col justify-center items-center\">\r\n        <TodoForm addTodo={addTodo}/>\r\n        <div className=\"w-10/12 mt-10 flex flex-col justify-center\">\r\n            {/* 초기값을 빈 배열로 했으니 tdata && 설정 안 해도 됨 */}\r\n            { tdata.map((item:Tdata) => \r\n                <TodoItem key={item.id} id={item.id} text={item.text} completed={item.completed} handleDelete={handleDelete} handleToggle={handleToggle}/>)}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAYA,YAAY;AACZ,MAAM,UAAiB;AAER,SAAS;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAE9C,qBAAqB;IACrB,MAAM,UAAU;QACZ,MAAM,OAAO,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;QAC7B,SAAS,KAAK,IAAI;IACtB;IAEA,mCAAmC;IACnC,MAAM,UAAU,OAAO,MAAa;QAChC,MAAM,OAAO,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS;YACnC,MAAM;YACN,WAAW;QACf;QACA,QAAQ,GAAG,CAAC,WAAW,KAAK,IAAI;QAChC;IACJ;IAEA,4BAA4B;IAC5B,MAAM,eAAe,OAAO;QACxB,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI;QAErC;IACJ;IAEA,+BAA+B;IAC/B,MAAM,eAAe,OAAO;QACxB,MAAM,OAAO,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI;QAC/C,MAAM,OAAO,KAAK,IAAI;QAEtB,MAAM,OAAO,KAAK,SAAS,IAAI,MAAM,MAAM;QAC3C,MAAM,qIAAA,CAAA,UAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE;YAClC,WAAY;QAChB;QACA;IACJ;IAEA,+BAA+B;IAC/B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN;IACJ,GAAE,EAAE;IAEJ,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAG,CAAC,OAAO;IAEf,GAAG;QAAC;KAAM;IAEV,qBACA,8OAAC;QAAI,WAAU;;0BACX,8OAAC,mIAAA,CAAA,UAAQ;gBAAC,SAAS;;;;;;0BACnB,8OAAC;gBAAI,WAAU;0BAET,MAAM,GAAG,CAAC,CAAC,qBACT,8OAAC,mIAAA,CAAA,UAAQ;wBAAe,IAAI,KAAK,EAAE;wBAAE,MAAM,KAAK,IAAI;wBAAE,WAAW,KAAK,SAAS;wBAAE,cAAc;wBAAc,cAAc;uBAA5G,KAAK,EAAE;;;;;;;;;;;;;;;;AAItC","debugId":null}}]
}