{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma =\r\n    globalForPrisma.prisma ||\r\n    new PrismaClient({\r\n    log: ['query'],\r\n    });\r\n    \r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,kBAAkB;AAEjB,MAAM,SACT,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACjB,KAAK;QAAC;KAAQ;AACd;AAEJ,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/app/api/user/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { prisma } from '@/lib/prisma';\r\n\r\nexport async function GET(req:NextRequest) {\r\n    const { searchParams } = new URL(req.url) ;\r\n    const id = searchParams.get(\"id\") ;\r\n    if (!id ) {\r\n        return NextResponse.json({message : 'ID를 입력하세요.'}, {status : 400}) ;\r\n    }\r\n    const user = await prisma.user.findUnique({\r\n        where : {id},\r\n    });\r\n    if (!user) {\r\n        return NextResponse.json({message : 'ID가 존재하지 않습니다.'}, {status : 404}) ;\r\n    }\r\n    return NextResponse.json(user) ;\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n    const { id , pwd } = await req.json();\r\n    const user = await prisma.user.create({\r\n    data: { id, pwd },\r\n    });\r\n    return NextResponse.json(user, { status: 201 });\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IAAI,GAAe;IACrC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,KAAK,aAAa,GAAG,CAAC;IAC5B,IAAI,CAAC,IAAK;QACN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,SAAU;QAAY,GAAG;YAAC,QAAS;QAAG;IACpE;IACA,MAAM,OAAO,MAAM,sHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACtC,OAAQ;YAAC;QAAE;IACf;IACA,IAAI,CAAC,MAAM;QACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,SAAU;QAAgB,GAAG;YAAC,QAAS;QAAG;IACxE;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC7B;AAEO,eAAe,KAAK,GAAgB;IACvC,MAAM,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,MAAM,IAAI,IAAI;IACnC,MAAM,OAAO,MAAM,sHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACtC,MAAM;YAAE;YAAI;QAAI;IAChB;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;QAAE,QAAQ;IAAI;AACjD","debugId":null}}]
}