{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/UI/TailBall.tsx"],"sourcesContent":["interface TailBallProps {\r\n  n : number | string;\r\n}\r\n\r\n// 1. 첫번째 방법\r\n// type BgColorT = {\r\n//   \"n0\" : string,\r\n//   \"n1\" : string,\r\n//   \"n2\" : string,\r\n//   \"n3\" : string,\r\n//   \"n4\" : string\r\n// }\r\n\r\n// 2. 두번째 방법\r\ntype BgColorT = Record<`n${0|1|2|3|4}`, string>\r\n\r\nexport default function TailBall({n}:TailBallProps) {\r\n    const bgColor:BgColorT = {\r\n      \"n0\" : \"bg-yellow-200\",\r\n      \"n1\" : \"bg-green-200\",\r\n      \"n2\" : \"bg-sky-300\",\r\n      \"n3\" : \"bg-purple-300\",\r\n      \"n4\" : \"bg-sky-500\"\r\n    }\r\n\r\n\r\n    const num : number = typeof n === 'string' ? parseInt(n)  : n ;\r\n    const strNum = \"n\" + String(Math.floor(num / 10))\r\n    // keyof : strNum은 BgColorT의 key값만 올 수 있으니 해줘야 함\r\n  return (\r\n    <div className={\r\n        `w-16 h-16 ${bgColor[strNum as keyof BgColorT]}\r\n        flex justify-center items-center\r\n        p-10 rounded-full mr-5\r\n        text-3xl text-white font-bold`\r\n    }>\r\n      {n}\r\n      <div className=\"bg-purple-300\"></div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAgBe,SAAS,SAAS,EAAC,CAAC,EAAe;IAC9C,MAAM,UAAmB;QACvB,MAAO;QACP,MAAO;QACP,MAAO;QACP,MAAO;QACP,MAAO;IACT;IAGA,MAAM,MAAe,OAAO,MAAM,WAAW,SAAS,KAAM;IAC5D,MAAM,SAAS,MAAM,OAAO,KAAK,KAAK,CAAC,MAAM;IAC7C,gDAAgD;IAClD,qBACE,6LAAC;QAAI,WACD,CAAC,UAAU,EAAE,OAAO,CAAC,OAAyB,CAAC;;;qCAGlB,CAAC;;YAE/B;0BACD,6LAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;KAxBwB","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/UI/TailButton.tsx"],"sourcesContent":["interface TailButtonProps {\r\n  caption:string;\r\n  color:\"blue\" | \"red\" | \"emerald\" | \"orange\" | \"lorange\" | \"lblue\" | \"gray\" | \"white\" | \"yellow\" | \"lyellow\";\r\n  onClick?:(e:MouseEvent<HTMLButtonElement>)=>void; // \"?\" 붙이면 onClick 반드시 안 써도 됨\r\n}\r\n\r\nimport { MouseEvent } from \"react\"; // e.preventDefault 안 해도 됨\r\n\r\ntype BgT = {\r\n  \"blue\":string;\r\n  \"red\":string;\r\n  \"emerald\":string;\r\n  \"orange\" :string;\r\n  \"lorange\":string;\r\n  \"lblue\":string;\r\n  \"gray\":string;\r\n  \"white\":string;\r\n  \"yellow\":string;\r\n  \"lyellow\":string;\r\n}\r\n\r\n\r\nexport default function TailButton({caption, color, onClick}:TailButtonProps) {\r\n    const bg:BgT = {\r\n        \"blue\" : \"bg-blue-700 text-white\",\r\n        \"red\" : \"bg-red-700 text-white\",\r\n        \"emerald\" : \"bg-emerald-800 text-white\",\r\n        \"orange\" : \"bg-orange-600 text-white\",\r\n        \"lorange\" : \"bg-orange-300 text-white\",\r\n        \"lblue\" : \"bg-blue-400 text-white\",\r\n        \"gray\" : \"bg-gray-100 text-white\",\r\n        \"white\" : \"bg-white text-gray-600 font-bold border-2 border-gray-100\",\r\n        \"yellow\" : \"bg-yellow-200 text-white\",\r\n        \"lyellow\" : \"bg-sky-900 text-white\",\r\n    }\r\n    const bgHover:BgT = {\r\n        \"blue\" : \"hover:bg-blue-500 text-white\",\r\n        \"red\" : \"hover:bg-red-500 text-white\",\r\n        \"emerald\" : \"hover:bg-emerald-600 text-white\",\r\n        \"orange\" : \"hover:bg-orange-500 text-white\",\r\n        \"lorange\" : \"hover:bg-orange-200 text-white\",\r\n        \"lblue\" : \"hover:bg-blue-700 text-white\",\r\n        \"yellow\" : \"hover:bg-yellow-400 text-white\",\r\n        \"white\" : \"hover:bg-white text-gray-600 font-bold\",\r\n        \"gray\" : \"hover:bg-gray-100 text-white\",\r\n        \"lyellow\" : \"hover:bg-sky-700 text-black\",\r\n    }\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={`w-full py-2 px-4 text-base\r\n                    flex justify-center items-center\r\n                    ${bgHover[color]} hover:font-bold\r\n                    ${bg[color]} rounded-lg`}>\r\n      {caption}\r\n    </button>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAsBe,SAAS,WAAW,EAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAiB;IACxE,MAAM,KAAS;QACX,QAAS;QACT,OAAQ;QACR,WAAY;QACZ,UAAW;QACX,WAAY;QACZ,SAAU;QACV,QAAS;QACT,SAAU;QACV,UAAW;QACX,WAAY;IAChB;IACA,MAAM,UAAc;QAChB,QAAS;QACT,OAAQ;QACR,WAAY;QACZ,UAAW;QACX,WAAY;QACZ,SAAU;QACV,UAAW;QACX,SAAU;QACV,QAAS;QACT,WAAY;IAChB;IACF,qBACE,6LAAC;QAAO,MAAK;QAAS,SAAS;QAAS,WAAW,CAAC;;oBAEpC,EAAE,OAAO,CAAC,MAAM,CAAC;oBACjB,EAAE,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC;kBACrC;;;;;;AAGP;KAjCwB","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://C%3A/work/kdt01_nextjs/src/app/lotto/page.tsx"],"sourcesContent":["'use client'\r\nimport TailBall from \"../../UI/TailBall\";\r\nimport TailButton from \"../../UI/TailButton\";\r\nimport React, { useState } from \"react\"\r\nexport default function Lotto() {\r\n    const [lottoTags, setLottoTags] = useState<React.ReactElement[]>([]);\r\n    \r\n    const handleLottoNum = () => {\r\n        let lottoNum:(number|string)[] = [];\r\n        while(lottoNum.length < 7){\r\n            const n = Math.floor(Math.random()*45) +1; //1~45까지\r\n            //랜덤수를 배열에 넣기\r\n            if(!lottoNum.includes(n)){\r\n                lottoNum.push(n)\r\n            }\r\n        }\r\n        //마지막 보너스 번호 => 배열임\r\n        const bonus = lottoNum.splice(-1);\r\n        //로또 번호 정렬\r\n        lottoNum.sort((a:number|string, b:number|string) => {\r\n          if(typeof a === 'string') a = parseInt(a)\r\n          if(typeof b === 'string') b = parseInt(b)\r\n          return a-b\r\n        });\r\n        //로또 배열 다시 생성\r\n        lottoNum = [...lottoNum, '+', ...bonus]\r\n        // setLottoTags = lottoNum; state 변수는 이렇게 못씀\r\n        //TailBall 만들기\r\n        const tm = lottoNum.map((item:number|string) => item === '+' ? <span className=\"w-16 h-16 text-4xl font-bold mr-5\r\n                                                    flex justify-center items-center\" key={item}>{item}</span> \r\n                                        : <TailBall key={'n' + item} n={item}/>);\r\n        setLottoTags(tm);\r\n        console.log(lottoNum);\r\n    }\r\n  return (\r\n    <div className=\"w-11/12 flex flex-col justify-center items-center\">\r\n      <div className=\"w-full flex justify-center items-center mb-10\">\r\n        {lottoTags}\r\n      </div>\r\n      <div className=\"mt-10 flex\">\r\n        <TailButton caption=\"로또번호생성\" color=\"lyellow\" onClick={handleLottoNum}/>     \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;AAIe,SAAS;;IACpB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB,EAAE;IAEnE,MAAM,iBAAiB;QACnB,IAAI,WAA6B,EAAE;QACnC,MAAM,SAAS,MAAM,GAAG,EAAE;YACtB,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAG,MAAK,GAAG,QAAQ;YACnD,aAAa;YACb,IAAG,CAAC,SAAS,QAAQ,CAAC,IAAG;gBACrB,SAAS,IAAI,CAAC;YAClB;QACJ;QACA,mBAAmB;QACnB,MAAM,QAAQ,SAAS,MAAM,CAAC,CAAC;QAC/B,UAAU;QACV,SAAS,IAAI,CAAC,CAAC,GAAiB;YAC9B,IAAG,OAAO,MAAM,UAAU,IAAI,SAAS;YACvC,IAAG,OAAO,MAAM,UAAU,IAAI,SAAS;YACvC,OAAO,IAAE;QACX;QACA,aAAa;QACb,WAAW;eAAI;YAAU;eAAQ;SAAM;QACvC,4CAA4C;QAC5C,cAAc;QACd,MAAM,KAAK,SAAS,GAAG,CAAC,CAAC,OAAuB,SAAS,oBAAM,6LAAC;gBAAK,WAAU;0BACW;eAAP;;;;qCACjD,6LAAC,yHAAA,CAAA,UAAQ;gBAAkB,GAAG;eAAf,MAAM;;;;;QACvD,aAAa;QACb,QAAQ,GAAG,CAAC;IAChB;IACF,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACZ;;;;;;0BAEH,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,2HAAA,CAAA,UAAU;oBAAC,SAAQ;oBAAS,OAAM;oBAAU,SAAS;;;;;;;;;;;;;;;;;AAI9D;GAxCwB;KAAA","debugId":null}}]
}